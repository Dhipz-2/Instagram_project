A) Marketing: The marketing team wants to launch some campaigns, and they need your help with the following
1.	Rewarding Most Loyal Users: People who have been using the platform for the longest time.
Your Task: Find the 5 oldest users of the Instagram from the database provided

select id,username,created_at from users order by created_at limit 5;

		
2.		Remind Inactive Users to Start Posting: By sending them promotional emails to post their 1st photo.
Your Task: Find the users who have never posted a single photo on Instagram

select distinct a.id, a.username from users a 
left join photos b 
on a.id = b.user_id where b.user_id is null;


3.	Declaring Contest Winner: The team started a contest and the user who gets the most likes on a single photo will win the contest now they wish to declare the winner.
Your Task: Identify the winner of the contest and provide their details to the team

select b.id, b.username
from (select user_id as auser_id ,count(photo_id) as count_photo from likes group by user_id) a
join users b
on auser_id = b.id
where count_photo = (select max(count_photo) from (select user_id as auser_id ,count(photo_id) as count_photo from likes group by user_id) c) 
group by b.id, b.username
order by count_photo desc;


4.	Hashtag Researching: A partner brand wants to know, which hashtags to use in the post to reach the most people on the platform.
Your Task: Identify and suggest the top 5 most used hashtags on the platform

select b.tag_name, count(b.tag_name)
from photo_tags a 
join tags b 
on a.tag_id = b.id  
group by b.tag_name
order by count(b.tag_name) desc
limit 5;


5.	Launch AD Campaign: The team wants to know, which day would be the best day to launch ADs.
Your Task: What day of the week do most users register on? Provide insights on when to schedule an ad campaign

select most_users from (select dayofweek(created_at) as most_user, count(dayofweek(created_at)) as count_week from users group by dayofweek(created_at) order by count(dayofweek(created_at)) desc) a 
where count_week = (select max(count_week) from (select dayofweek(created_at) as most_users, count(dayofweek(created_at)) as count_week from users group by dayofweek(created_at)) b);
0 = Monday, 1 = Tuesday, 2 = Wednesday, 3 = Thursday, 4 = Friday, 5 = Saturday, 6 = Sunday.


B) Investor Metrics: Our investors want to know if Instagram is performing well and is not becoming redundant like Facebook, they want to assess the app on the following grounds
1.	User Engagement: Are users still as active and post on Instagram or they are making fewer posts
Your Task: Provide how many times does average user posts on Instagram. Also, provide the total number of photos on Instagram/total number of users

select count(a.user_id) from photos a 
join users b
on a.user_id =  b.id
where a.user_id = (select round(avg(count_id)) as avg_id from (select user_id as uid, count(user_id) as count_id from photos group by user_id) a)

select count(b.id)/count(distinct(a.id)) from users a left join photos b on a.id = b.user_id;

2.	Bots & Fake Accounts: The investors want to know if the platform is crowded with fake and dummy accounts
Your Task: Provide data on users (bots) who have liked every single photo on the site (since any normal user would not be able to do this).

select uid, b.username from
(select user_id as uid, count(user_id) as cid 
from likes 
group by user_id 
order by count(*) desc) a
join users b 
on b.id = a.uid
where cid = (select max(cid) from (select count(user_id) as cid 
from likes 
group by user_id 
order by count(*) desc)b)






